import {useContext, useEffect, useRef, useState} from "react";
import Quill from "quill";
import "quill/dist/quill.snow.css"; // –ò–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π Quill
import "./QuillTextEditor.css";
import {getEnvironmentModelById, SaveShortInstruction} from "../../../../../services/drkb-wiki/EnvironmentModelService";
import {Button} from "@mui/material";
import {EnvironmentModelContext} from "../../../../../context/EnvironmentModelContext";
import {saveVideo} from "../../../../../services/drkb-wiki/VideoService";
import ProgressBar from "../../../../../components/ProgressBar/ProgressBar";
import ErrorSnackbar from "../../../../../components/ErrorSnackbar/ErrorSnackbar";
import SuccessSnackbar from "../../../../../components/SuccessSnackbar/SuccessSnackbar";


///TODO –î–æ–±–∞–≤–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
///–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ.
const QuillTextEditor = ({value, setValue}) => {
    //const editorRef = useRef(null);
    //const [value, setValue] = useState("");
    const editorRef = useRef(null);
    useEffect(() => {
        if (editorRef.current) {
            const quill = new Quill(editorRef.current, {
                theme: "snow",
                placeholder: "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–¥–µ—Å—å...",
                modules: {
                    toolbar: {
                        container: [
                            [{ header: [1, 2, 3, false] }],
                            ["bold"],
                            [{ align: "" }, { align: "center" }, { align: "right" }],
                            /*[{ list: "ordered" }, { list: "bullet" }],*/
                            ["image"],
                            ["customVideo"], // –ö–∞—Å—Ç–æ–º–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
                            ["clean"],
                        ],
                        handlers: {
                            customVideo: () => handleVideoUpload(quill), // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
                        },
                    },
                },
            });

            const handleVideoUpload = (quill) => {
                const fileInput = document.createElement("input");
                fileInput.setAttribute("type", "file");
                fileInput.setAttribute("accept", "video/*");
                fileInput.click();

                fileInput.onchange = async () => {
                    const file = fileInput.files[0];

                    if (file && environmentModelId) {
                        const result = await saveVideo(environmentModelId, file);
                        if (result.success) {
                            console.log(result.data);
                            const videoUrl = `${result.data.url}`;
                            const range = quill.getSelection(true);
                            quill.insertEmbed(range.index, "video", videoUrl);
                        }
                        else {
                            setError(result.errorMessage);
                        }
                    } else {
                        setError("–ù–µ –≤—ã–±—Ä–∞–Ω —Ñ–∞–π–ª –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ID –º–æ–¥–µ–ª–∏.");
                    }
                };
            };

            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω—É—é –∫–Ω–æ–ø–∫—É
            const customButton = document.querySelector(".ql-customVideo");
            if (customButton) {
                customButton.innerHTML = "üé¨"; // –ò–∫–æ–Ω–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏
                customButton.title = "–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ";
            }

            quill.on("text-change", () => {
                setValue(quill.root.innerHTML);
            });

        }
    }, []);

    const sendContentOnServer = async () => {
        const result = await SaveShortInstruction(environmentModel.id, value);
        if (result.success) {
            console.log("–£–°–ü–ï–•");
            setSuccessMessage("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!");
        }
        else {
            console.log("–û–®–ò–ë–ö–ê");
            setError(result.errorMessage);
        }
    }

    return (
        <>
            <>
                <div ref={editorRef} className="quill-editor" />
                <Button
                    type="button"
                    onClick={sendContentOnServer}
                    className="editor-save-btn"
                    variant="contained"
                >–°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                </Button>
            </>
            <ErrorSnackbar
                errorMessage={error}
                onClose={() => setError(null)}
            />
            <SuccessSnackbar
                message={successMessage}
                onClose={()=> setSuccessMessage(null)}
            />
        </>

    );
};

export default QuillTextEditor;
